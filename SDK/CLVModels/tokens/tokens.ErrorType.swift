/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

/*
    type of error
*/
extension CLVModels.Tokens {

    public enum ErrorType: Codable {
        case api_connection_error
        case api_error
        case authentication_error
        case card_error
        case idempotency_error
        case invalid_request_error
        case rate_limit_error
        case validation_error
        case PARSE_UNKNOWN(String)

        enum Key: CodingKey {
            case rawValue
        }

        public init(rawValue:String) {
            switch rawValue {
                case  "api_connection_error":
                    self = .api_connection_error
                case  "api_error":
                    self = .api_error
                case  "authentication_error":
                    self = .authentication_error
                case  "card_error":
                    self = .card_error
                case  "idempotency_error":
                    self = .idempotency_error
                case  "invalid_request_error":
                    self = .invalid_request_error
                case  "rate_limit_error":
                    self = .rate_limit_error
                case  "validation_error":
                    self = .validation_error
                default:
                    self = .PARSE_UNKNOWN(rawValue)
            }
        }

        public init(from decoder: Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(String.self)
            self.init(rawValue: rawValue)
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.singleValueContainer()
            try container.encode(toString)
        }

        public var toString: String {
            switch self {
                case  .api_connection_error:
                    return "api_connection_error"
                case  .api_error:
                    return "api_error"
                case  .authentication_error:
                    return "authentication_error"
                case  .card_error:
                    return "card_error"
                case  .idempotency_error:
                    return "idempotency_error"
                case  .invalid_request_error:
                    return "invalid_request_error"
                case  .rate_limit_error:
                    return "rate_limit_error"
                case  .validation_error:
                    return "validation_error"
                case .PARSE_UNKNOWN(let rawValue):
                    return rawValue            
            }
        }
    }
}