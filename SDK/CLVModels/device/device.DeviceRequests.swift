/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

/*
    This is a wrapper calss which holds a list of request uuids
*/

import Foundation

extension CLVModels.Device {

    public class DeviceRequests: Codable {

        public var requestUuids: [String]?

        public var decodeError:[Swift.Error] = [Swift.Error]()

        enum CodingKeys: CodingKey {
            case requestUuids
        }

        public init() {}

        required public init(from decoder: Decoder) throws {
            let rootContainer = try decoder.container(keyedBy: CodingKeys.self)
            if (rootContainer.contains(.requestUuids)) {
                do {
                    let requestUuidsContainer = try rootContainer.nestedContainer(keyedBy: CLVModels.ElementsKey.self, forKey: .requestUuids)
                    self.requestUuids = try requestUuidsContainer.decodeIfPresent([String].self, forKey: .elements)
                } catch {
                    decodeError.append(error)
                }
            }
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: CodingKeys.self)
            if (requestUuids != nil) { try container.encode(requestUuids, forKey: .requestUuids) }
        }
    }

}