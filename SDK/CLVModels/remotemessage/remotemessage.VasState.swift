/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

extension CLVModels.Remotemessage {

    public enum VasState: Codable {
        case START_REQUESTED
        case STARTED
        case TIMED_OUT
        case STOP_REQUESTED
        case STOPPED
        case FAILED
        case PARSE_UNKNOWN(String)

        enum Key: CodingKey {
            case rawValue
        }

        public init(rawValue:String) {
            switch rawValue {
                case  "START_REQUESTED":
                    self = .START_REQUESTED
                case  "STARTED":
                    self = .STARTED
                case  "TIMED_OUT":
                    self = .TIMED_OUT
                case  "STOP_REQUESTED":
                    self = .STOP_REQUESTED
                case  "STOPPED":
                    self = .STOPPED
                case  "FAILED":
                    self = .FAILED
                default:
                    self = .PARSE_UNKNOWN(rawValue)
            }
        }

        public init(from decoder: Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(String.self)
            self.init(rawValue: rawValue)
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.singleValueContainer()
            try container.encode(toString)
        }

        public var toString: String {
            switch self {
                case  .START_REQUESTED:
                    return "START_REQUESTED"
                case  .STARTED:
                    return "STARTED"
                case  .TIMED_OUT:
                    return "TIMED_OUT"
                case  .STOP_REQUESTED:
                    return "STOP_REQUESTED"
                case  .STOPPED:
                    return "STOPPED"
                case  .FAILED:
                    return "FAILED"
                case .PARSE_UNKNOWN(let rawValue):
                    return rawValue            
            }
        }
    }
}