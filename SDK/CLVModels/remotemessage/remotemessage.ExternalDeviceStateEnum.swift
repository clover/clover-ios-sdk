/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */


import Foundation

extension CLVModels.Remotemessage {

    public class ExternalDeviceStateEnum: Codable {

        public var state: CLVModels.Remotemessage.ExternalDeviceState?

        public var decodeError:[Swift.Error] = [Swift.Error]()

        enum CodingKeys: CodingKey {
            case state
        }

        public init() {}

        required public init(from decoder: Decoder) throws {
            let rootContainer = try decoder.container(keyedBy: CodingKeys.self)
            do {
                self.state = try rootContainer.decodeIfPresent(CLVModels.Remotemessage.ExternalDeviceState.self, forKey: .state)
            } catch {
                decodeError.append(error)
            }
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: CodingKeys.self)
            if (state != nil) { try container.encode(state, forKey: .state) }
        }
    }

}