/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */


import Foundation

extension CLVModels.Order {

    public class OverrideInfo: Codable {

        /// Flag indicating whether a currently associated customer on an order should not be replaced
        public var disableCustomerUpdate: Bool?

        public var decodeError:[Swift.Error] = [Swift.Error]()

        enum CodingKeys: CodingKey {
            case disableCustomerUpdate
        }

        public init() {}

        required public init(from decoder: Decoder) throws {
            let rootContainer = try decoder.container(keyedBy: CodingKeys.self)
            do {
                self.disableCustomerUpdate = try rootContainer.decodeIfPresent(Bool.self, forKey: .disableCustomerUpdate)
            } catch {
                decodeError.append(error)
            }
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: CodingKeys.self)
            if (disableCustomerUpdate != nil) { try container.encode(disableCustomerUpdate, forKey: .disableCustomerUpdate) }
        }
    }

}