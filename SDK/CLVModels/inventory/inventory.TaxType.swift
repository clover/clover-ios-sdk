/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

extension CLVModels.Inventory {

    public enum TaxType: Codable {
        case VAT_TAXABLE
        case VAT_NON_TAXABLE
        case VAT_EXEMPT
        case INTERNAL_TAX
        case PARSE_UNKNOWN(String)

        enum Key: CodingKey {
            case rawValue
        }

        public init(rawValue:String) {
            switch rawValue {
                case  "VAT_TAXABLE":
                    self = .VAT_TAXABLE
                case  "VAT_NON_TAXABLE":
                    self = .VAT_NON_TAXABLE
                case  "VAT_EXEMPT":
                    self = .VAT_EXEMPT
                case  "INTERNAL_TAX":
                    self = .INTERNAL_TAX
                default:
                    self = .PARSE_UNKNOWN(rawValue)
            }
        }

        public init(from decoder: Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(String.self)
            self.init(rawValue: rawValue)
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.singleValueContainer()
            try container.encode(toString)
        }

        public var toString: String {
            switch self {
                case  .VAT_TAXABLE:
                    return "VAT_TAXABLE"
                case  .VAT_NON_TAXABLE:
                    return "VAT_NON_TAXABLE"
                case  .VAT_EXEMPT:
                    return "VAT_EXEMPT"
                case  .INTERNAL_TAX:
                    return "INTERNAL_TAX"
                case .PARSE_UNKNOWN(let rawValue):
                    return rawValue            
            }
        }
    }
}