/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */


import Foundation

extension CLVModels.Payments {

    public class VasConfig: Codable {

        /// List of vas service providers who are interested in receiving vas data
        public var vasProviders: [CLVModels.Payments.VasServiceProvider]?

        public var decodeError:[Swift.Error] = [Swift.Error]()

        enum CodingKeys: CodingKey {
            case vasProviders
        }

        public init() {}

        required public init(from decoder: Decoder) throws {
            let rootContainer = try decoder.container(keyedBy: CodingKeys.self)
            if (rootContainer.contains(.vasProviders)) {
                do {
                    let vasProvidersContainer = try rootContainer.nestedContainer(keyedBy: CLVModels.ElementsKey.self, forKey: .vasProviders)
                    self.vasProviders = try vasProvidersContainer.decodeIfPresent([CLVModels.Payments.VasServiceProvider].self, forKey: .elements)
                } catch {
                    decodeError.append(error)
                }
            }
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: CodingKeys.self)
            if (vasProviders != nil) { try container.encode(vasProviders, forKey: .vasProviders) }
        }
    }

}