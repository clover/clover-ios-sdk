/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

/*
    Identification type
*/
extension CLVModels.Payments {

    public enum IdType: Codable {
        case DRIVERS_LICENSE
        case PASSPORT
        case US_MILITARY_ID
        case US_RESIDENT
        case CONSULAR_ID
        case CANADIAN_CITIZEN
        case US_STATE_GOVT_ID
        case OTHER_ID
        case PARSE_UNKNOWN(String)

        enum Key: CodingKey {
            case rawValue
        }

        public init(rawValue:String) {
            switch rawValue {
                case  "DRIVERS_LICENSE":
                    self = .DRIVERS_LICENSE
                case  "PASSPORT":
                    self = .PASSPORT
                case  "US_MILITARY_ID":
                    self = .US_MILITARY_ID
                case  "US_RESIDENT":
                    self = .US_RESIDENT
                case  "CONSULAR_ID":
                    self = .CONSULAR_ID
                case  "CANADIAN_CITIZEN":
                    self = .CANADIAN_CITIZEN
                case  "US_STATE_GOVT_ID":
                    self = .US_STATE_GOVT_ID
                case  "OTHER_ID":
                    self = .OTHER_ID
                default:
                    self = .PARSE_UNKNOWN(rawValue)
            }
        }

        public init(from decoder: Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(String.self)
            self.init(rawValue: rawValue)
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.singleValueContainer()
            try container.encode(toString)
        }

        public var toString: String {
            switch self {
                case  .DRIVERS_LICENSE:
                    return "DRIVERS_LICENSE"
                case  .PASSPORT:
                    return "PASSPORT"
                case  .US_MILITARY_ID:
                    return "US_MILITARY_ID"
                case  .US_RESIDENT:
                    return "US_RESIDENT"
                case  .CONSULAR_ID:
                    return "CONSULAR_ID"
                case  .CANADIAN_CITIZEN:
                    return "CANADIAN_CITIZEN"
                case  .US_STATE_GOVT_ID:
                    return "US_STATE_GOVT_ID"
                case  .OTHER_ID:
                    return "OTHER_ID"
                case .PARSE_UNKNOWN(let rawValue):
                    return rawValue            
            }
        }
    }
}