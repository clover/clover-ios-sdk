/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

extension CLVModels.Payments {

    public enum VasMode: Codable {
        case PAY_ONLY
        case VAS_ONLY
        case VAS_OR_PAYMENT
        case VAS_AND_PAYMENT
        case PARSE_UNKNOWN(String)

        enum Key: CodingKey {
            case rawValue
        }

        public init(rawValue:String) {
            switch rawValue {
                case  "PAY_ONLY":
                    self = .PAY_ONLY
                case  "VAS_ONLY":
                    self = .VAS_ONLY
                case  "VAS_OR_PAYMENT":
                    self = .VAS_OR_PAYMENT
                case  "VAS_AND_PAYMENT":
                    self = .VAS_AND_PAYMENT
                default:
                    self = .PARSE_UNKNOWN(rawValue)
            }
        }

        public init(from decoder: Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(String.self)
            self.init(rawValue: rawValue)
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.singleValueContainer()
            try container.encode(toString)
        }

        public var toString: String {
            switch self {
                case  .PAY_ONLY:
                    return "PAY_ONLY"
                case  .VAS_ONLY:
                    return "VAS_ONLY"
                case  .VAS_OR_PAYMENT:
                    return "VAS_OR_PAYMENT"
                case  .VAS_AND_PAYMENT:
                    return "VAS_AND_PAYMENT"
                case .PARSE_UNKNOWN(let rawValue):
                    return rawValue            
            }
        }
    }
}