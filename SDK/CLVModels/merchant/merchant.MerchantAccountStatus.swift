/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

extension CLVModels.Merchant {

    public enum MerchantAccountStatus: Codable {
        case CLOSED
        case FRAUD
        case CREDIT_DECLINED
        case OPEN
        case UNKNOWN
        case PENDING_CREDIT_APPROVAL
        case PARSE_UNKNOWN(String)

        enum Key: CodingKey {
            case rawValue
        }

        public init(rawValue:String) {
            switch rawValue {
                case  "CLOSED":
                    self = .CLOSED
                case  "FRAUD":
                    self = .FRAUD
                case  "CREDIT_DECLINED":
                    self = .CREDIT_DECLINED
                case  "OPEN":
                    self = .OPEN
                case  "UNKNOWN":
                    self = .UNKNOWN
                case  "PENDING_CREDIT_APPROVAL":
                    self = .PENDING_CREDIT_APPROVAL
                default:
                    self = .PARSE_UNKNOWN(rawValue)
            }
        }

        public init(from decoder: Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(String.self)
            self.init(rawValue: rawValue)
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.singleValueContainer()
            try container.encode(toString)
        }

        public var toString: String {
            switch self {
                case  .CLOSED:
                    return "CLOSED"
                case  .FRAUD:
                    return "FRAUD"
                case  .CREDIT_DECLINED:
                    return "CREDIT_DECLINED"
                case  .OPEN:
                    return "OPEN"
                case  .UNKNOWN:
                    return "UNKNOWN"
                case  .PENDING_CREDIT_APPROVAL:
                    return "PENDING_CREDIT_APPROVAL"
                case .PARSE_UNKNOWN(let rawValue):
                    return rawValue            
            }
        }
    }
}