/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */


import Foundation

extension CLVModels.Hours {

    public class HourRange: Codable {

        public var start: Int32?
        public var end: Int32?

        public var decodeError:[Swift.Error] = [Swift.Error]()

        enum CodingKeys: CodingKey {
            case start
            case end
        }

        public init() {}

        required public init(from decoder: Decoder) throws {
            let rootContainer = try decoder.container(keyedBy: CodingKeys.self)
            do {
                self.start = try rootContainer.decodeIfPresent(Int32.self, forKey: .start)
            } catch {
                decodeError.append(error)
            }
            do {
                self.end = try rootContainer.decodeIfPresent(Int32.self, forKey: .end)
            } catch {
                decodeError.append(error)
            }
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: CodingKeys.self)
            if (start != nil) { try container.encode(start, forKey: .start) }
            if (end != nil) { try container.encode(end, forKey: .end) }
        }
    }

}