/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */


import Foundation

extension CLVModels.Boarding {

    public class EventInsightsReportRequest: Codable {

        /// SENT|OPENED|VIEWED_BOTTOM|CLICKED_LINK|UNSUBSCRIBED
        public var eventCode: String?

        public var decodeError:[Swift.Error] = [Swift.Error]()

        enum CodingKeys: CodingKey {
            case eventCode
        }

        public init() {}

        required public init(from decoder: Decoder) throws {
            let rootContainer = try decoder.container(keyedBy: CodingKeys.self)
            do {
                self.eventCode = try rootContainer.decodeIfPresent(String.self, forKey: .eventCode)
            } catch {
                decodeError.append(error)
            }
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: CodingKeys.self)
            if (eventCode != nil) { try container.encode(eventCode, forKey: .eventCode) }
        }
    }

}