/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

/*
    type of error
*/
extension CLVModels.Ecomm {

    public enum risk_level: Codable {
        case normal
        case elevated
        case highest
        case not_assessed
        case unknown
        case PARSE_UNKNOWN(String)

        enum Key: CodingKey {
            case rawValue
        }

        public init(rawValue:String) {
            switch rawValue {
                case  "normal":
                    self = .normal
                case  "elevated":
                    self = .elevated
                case  "highest":
                    self = .highest
                case  "not_assessed":
                    self = .not_assessed
                case  "unknown":
                    self = .unknown
                default:
                    self = .PARSE_UNKNOWN(rawValue)
            }
        }

        public init(from decoder: Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(String.self)
            self.init(rawValue: rawValue)
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.singleValueContainer()
            try container.encode(toString)
        }

        public var toString: String {
            switch self {
                case  .normal:
                    return "normal"
                case  .elevated:
                    return "elevated"
                case  .highest:
                    return "highest"
                case  .not_assessed:
                    return "not_assessed"
                case  .unknown:
                    return "unknown"
                case .PARSE_UNKNOWN(let rawValue):
                    return rawValue            
            }
        }
    }
}