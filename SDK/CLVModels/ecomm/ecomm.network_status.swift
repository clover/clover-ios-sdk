/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

extension CLVModels.Ecomm {

    public enum network_status: Codable {
        case approved_by_network
        case declined_by_network
        case not_sent_to_network
        case reversed_after_approval
        case PARSE_UNKNOWN(String)

        enum Key: CodingKey {
            case rawValue
        }

        public init(rawValue:String) {
            switch rawValue {
                case  "approved_by_network":
                    self = .approved_by_network
                case  "declined_by_network":
                    self = .declined_by_network
                case  "not_sent_to_network":
                    self = .not_sent_to_network
                case  "reversed_after_approval":
                    self = .reversed_after_approval
                default:
                    self = .PARSE_UNKNOWN(rawValue)
            }
        }

        public init(from decoder: Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(String.self)
            self.init(rawValue: rawValue)
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.singleValueContainer()
            try container.encode(toString)
        }

        public var toString: String {
            switch self {
                case  .approved_by_network:
                    return "approved_by_network"
                case  .declined_by_network:
                    return "declined_by_network"
                case  .not_sent_to_network:
                    return "not_sent_to_network"
                case  .reversed_after_approval:
                    return "reversed_after_approval"
                case .PARSE_UNKNOWN(let rawValue):
                    return rawValue            
            }
        }
    }
}