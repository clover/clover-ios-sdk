/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

extension CLVModels.Employees {

    public enum Permission: Codable {
        case ORDERS_R
        case ORDERS_W
        case INVENTORY_R
        case INVENTORY_W
        case PAYMENTS_R
        case PAYMENTS_W
        case CUSTOMERS_R
        case CUSTOMERS_W
        case EMPLOYEES_R
        case EMPLOYEES_W
        case MERCHANT_R
        case MERCHANT_W
        case PARSE_UNKNOWN(String)

        enum Key: CodingKey {
            case rawValue
        }

        public init(rawValue:String) {
            switch rawValue {
                case  "ORDERS_R":
                    self = .ORDERS_R
                case  "ORDERS_W":
                    self = .ORDERS_W
                case  "INVENTORY_R":
                    self = .INVENTORY_R
                case  "INVENTORY_W":
                    self = .INVENTORY_W
                case  "PAYMENTS_R":
                    self = .PAYMENTS_R
                case  "PAYMENTS_W":
                    self = .PAYMENTS_W
                case  "CUSTOMERS_R":
                    self = .CUSTOMERS_R
                case  "CUSTOMERS_W":
                    self = .CUSTOMERS_W
                case  "EMPLOYEES_R":
                    self = .EMPLOYEES_R
                case  "EMPLOYEES_W":
                    self = .EMPLOYEES_W
                case  "MERCHANT_R":
                    self = .MERCHANT_R
                case  "MERCHANT_W":
                    self = .MERCHANT_W
                default:
                    self = .PARSE_UNKNOWN(rawValue)
            }
        }

        public init(from decoder: Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(String.self)
            self.init(rawValue: rawValue)
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.singleValueContainer()
            try container.encode(toString)
        }

        public var toString: String {
            switch self {
                case  .ORDERS_R:
                    return "ORDERS_R"
                case  .ORDERS_W:
                    return "ORDERS_W"
                case  .INVENTORY_R:
                    return "INVENTORY_R"
                case  .INVENTORY_W:
                    return "INVENTORY_W"
                case  .PAYMENTS_R:
                    return "PAYMENTS_R"
                case  .PAYMENTS_W:
                    return "PAYMENTS_W"
                case  .CUSTOMERS_R:
                    return "CUSTOMERS_R"
                case  .CUSTOMERS_W:
                    return "CUSTOMERS_W"
                case  .EMPLOYEES_R:
                    return "EMPLOYEES_R"
                case  .EMPLOYEES_W:
                    return "EMPLOYEES_W"
                case  .MERCHANT_R:
                    return "MERCHANT_R"
                case  .MERCHANT_W:
                    return "MERCHANT_W"
                case .PARSE_UNKNOWN(let rawValue):
                    return rawValue            
            }
        }
    }
}