/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */


import Foundation

extension CLVModels.Custom {

    public class CustomActivity: Codable {

        /// Action for the custom activity
        public var action: String?
        /// List of categories for the specified action.
        public var categories: [String]?

        public var decodeError:[Swift.Error] = [Swift.Error]()

        enum CodingKeys: CodingKey {
            case action
            case categories
        }

        public init() {}

        required public init(from decoder: Decoder) throws {
            let rootContainer = try decoder.container(keyedBy: CodingKeys.self)
            do {
                self.action = try rootContainer.decodeIfPresent(String.self, forKey: .action)
            } catch {
                decodeError.append(error)
            }
            if (rootContainer.contains(.categories)) {
                do {
                    let categoriesContainer = try rootContainer.nestedContainer(keyedBy: CLVModels.ElementsKey.self, forKey: .categories)
                    self.categories = try categoriesContainer.decodeIfPresent([String].self, forKey: .elements)
                } catch {
                    decodeError.append(error)
                }
            }
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: CodingKeys.self)
            if (action != nil) { try container.encode(action, forKey: .action) }
            if (categories != nil) { try container.encode(categories, forKey: .categories) }
        }
    }

}