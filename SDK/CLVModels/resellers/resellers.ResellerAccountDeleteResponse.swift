/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */


import Foundation

extension CLVModels.Resellers {

    public class ResellerAccountDeleteResponse: Codable {

        /// Used for displaying success or warning message
        public var deactivated: Bool?
        /// success or warning message
        public var message: String?

        public var decodeError:[Swift.Error] = [Swift.Error]()

        enum CodingKeys: CodingKey {
            case deactivated
            case message
        }

        public init() {}

        required public init(from decoder: Decoder) throws {
            let rootContainer = try decoder.container(keyedBy: CodingKeys.self)
            do {
                self.deactivated = try rootContainer.decodeIfPresent(Bool.self, forKey: .deactivated)
            } catch {
                decodeError.append(error)
            }
            do {
                self.message = try rootContainer.decodeIfPresent(String.self, forKey: .message)
            } catch {
                decodeError.append(error)
            }
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: CodingKeys.self)
            if (deactivated != nil) { try container.encode(deactivated, forKey: .deactivated) }
            if (message != nil) { try container.encode(message, forKey: .message) }
        }
    }

}